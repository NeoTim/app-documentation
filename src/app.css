@charset "UTF-8";
@import url(https://fonts.googleapis.com/css?family=Source+Code+Pro:400,600,300,500,700,900,200|Source+Sans+Pro:400,300,600,700,900,200italic,300italic);
html {
  box-sizing: border-box; }

*, *::after, *::before {
  box-sizing: inherit; }



[font="code"], [comment], ul.stack-list[source-code] li a {
  font-family: 'Source Code Pro'; }

[font="sans"] {
  font-family: 'Source Sans Pro', sans-serif; }





section.au-card > header:after, section.au-card > blockquote h1:after, section.au-card article > h3[description]:after, au-settings-button settings-container > au-select-list au-select-item select-item:after, au-settings-button settings-container > au-select-list au-select-item select-container div.select-option:after {
  left: 0;
  width: 100%; }

body header.au-header > nav.au-navbar nav-item[logo] a[logo]:after {
  top: 0;
  height: 100%; }

section.au-card > header:after, section.au-card > blockquote h1:after, section.au-card article > h3[description]:after, au-settings-button settings-container > au-select-list au-select-item select-item:after, au-settings-button settings-container > au-select-list au-select-item select-container div.select-option:after {
  bottom: 0; }

body header.au-header > nav.au-navbar nav-item[logo] a[logo]:after {
  right: 0; }



body main.main-host router-view.main-view-port main.page-host, body au-aside.au-aside > section, ul.inline-list, au-select-list, au-select-list au-select-item, au-select-list au-select-item select-container, au-select-list au-select-item select-container div.select-option, au-select-list au-select-item select-item, body, body header.au-header, body main.main-host, body main.main-host router-view.main-view-port main.page-host router-view.page-view-port au-view.content, body header.au-header nav.au-navbar, body main.main-host router-view.main-view-port main.page-host router-view.page-view-port, section.au-card, section.au-card > header, section.au-card > header h2, section.au-card > header h3, section.au-card > header h4, section.au-card > header h5, section.au-card > header span.card-control, section.au-card > blockquote, au-preview, au-preview example, au-preview narrative, au-settings-button, au-settings-button content-wrap, au-settings-button settings-container, body main.main-host router-view.main-view-port, body header.au-header > nav.au-navbar nav-item, body header.au-header > nav.au-navbar nav-item[menu], body header.au-header > nav.au-navbar nav-item[logo], body header.au-header > nav.au-navbar nav-item[logo] a[logo], body header.au-header > nav.au-navbar nav-item[logo] a[title] {
  display: -webkit-box;
  display: -webkit-flex;
  display: -moz-flex;
  display: -ms-flexbox;
  display: flex; }


ul.inline-list li {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -moz-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex; }


body main.main-host router-view.main-view-port main.page-host, body au-aside.au-aside > section, au-select-list, body, body header.au-header, body main.main-host, body main.main-host router-view.main-view-port main.page-host router-view.page-view-port au-view.content, section.au-card, section.au-card > blockquote, au-settings-button content-wrap, au-settings-button settings-container, body au-aside.au-aside {
  -webkit-box-direction: normal;
  -webkit-box-orient: vertical;
  -webkit-flex-direction: column;
  -moz-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column; }

au-select-list au-select-item, body header.au-header nav.au-navbar, body main.main-host router-view.main-view-port, body au-aside.au-aside > nav.au-tabs {
  -webkit-box-direction: normal;
  -webkit-box-orient: horizontal;
  -webkit-flex-direction: row;
  -moz-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row; }














button.au-button,
a.au-button {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  outline: 0;
  position: relative;
  cursor: pointer;
  text-align: center;
  white-space: nowrap;
  vertical-align: middle;
  -ms-touch-action: manipulation;
  touch-action: manipulation;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
  -webkit-tap-highlight-color: transparent;
  -webkit-font-smoothing: antialiased;
  box-shadow: 0 0 0 transparent;
  text-align: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  -webkit-align-items: center;
  -moz-align-items: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  -webkit-justify-content: center;
  -moz-justify-content: center;
  justify-content: center; }



au-dropdown dropdown-container, body au-aside.au-aside > nav.au-tabs {
  box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 1px 5px 0 rgba(0, 0, 0, 0.12); }

au-settings-button.is-active {
  box-shadow: 0 8px 10px 1px rgba(0, 0, 0, 0.14), 0 3px 14px 2px rgba(0, 0, 0, 0.12), 0 5px 5px -3px rgba(0, 0, 0, 0.2); }

body main.main-host router-view.main-view-port main.page-host, body au-aside.au-aside > section {
  -webkit-transform: translate3d(0, 0, 0);
  -ms-transform: translate3d(0, 0, 0);
  transform: translate3d(0, 0, 0);
  position: relative;
  overflow: auto;
  height: auto;
  max-height: 100%;
  min-height: 100%;
  -webkit-overflow-scrolling: touch;
  -ms-overflow-style: none; }
  body main.main-host router-view.main-view-port main.page-host::-webkit-scrollbar, body au-aside.au-aside > section::-webkit-scrollbar, body main.main-host router-view.main-view-port main.page-host::-webkit-scrollbar, body au-aside.au-aside > section::-webkit-scrollbar, body main.main-host router-view.main-view-port main.page-host::-webkit-scrollbar, body au-aside.au-aside > section::-webkit-scrollbar {
    display: none; }
  body main.main-host router-view.main-view-port main.page-host > *, body au-aside.au-aside > section > * {
    -webkit-transform: translate3d(0, 0, 0);
    -ms-transform: translate3d(0, 0, 0);
    transform: translate3d(0, 0, 0); }

[color="accent"] {
  color: #EC2685; }

[color="primary"] {
  color: #70519E; }

[color="primary-dark"] {
  color: #58407c; }

[color="text"] {
  color: rgba(0, 0, 0, 0.87); }

[color="label"] {
  color: rgba(0, 0, 0, 0.38); }

[color="secondary"] {
  color: rgba(0, 0, 0, 0.54); }

[trans="3"] {
  opacity: 0.3; }

[trans="6"] {
  opacity: 0.6; }

[trans="9"] {
  opacity: 0.9; }

[bold] {
  font-weight: bold !important; }

[gutter] {
  padding-left: 0 16px !important;
  padding-right: 0 16px !important; }

[half-gutter] {
  padding-left: 8px !important;
  padding-right: 8px !important; }

[gutter="2x"] {
  padding-left: 32px !important;
  padding-right: 32px !important; }

[direction="flex-row"] {
  -webkit-box-direction: normal;
  -webkit-box-orient: horizontal;
  -webkit-flex-direction: row !important;
  -moz-flex-direction: row !important;
  -ms-flex-direction: row !important;
  flex-direction: row !important; }

[direction="flex-column"] {
  -webkit-box-direction: normal;
  -webkit-box-orient: horizontal;
  -webkit-flex-direction: column !important;
  -moz-flex-direction: column !important;
  -ms-flex-direction: column !important;
  flex-direction: column !important; }

loading-indicator {
  display: block;
  position: absolute;
  min-width: 100%;
  top: 5rem; }

#nprogress .bar {
  position: absolute !important; }

button.au-button,
a.au-button {
  background-color: transparent;
  border-radius: 4px;
  border: 1px solid #70519E;
  color: #70519E;
  -webkit-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  -webkit-transition-duration: 200ms;
  transition-duration: 200ms;
  -webkit-transform-origin: center;
  -ms-transform-origin: center;
  transform-origin: center;
  -webkit-transform: translate3d(0, 0, 0);
  -ms-transform: translate3d(0, 0, 0);
  transform: translate3d(0, 0, 0);
  display: inline-block;
  margin: 0 2px;
  font-size: 12px;
  padding: 8px 12px; }
  button.au-button:hover,
  a.au-button:hover {
    background-color: #70519E;
    color: white;
    background: #7d519e;
    color: white; }

.au-reference-list ul {
  margin-left: 24px;
  font-size: 14px;
  line-height: 26px;
  margin-left: 0;
  list-style: initial; }
  .au-reference-list ul a {
    font-family: consolas;
    font-size: 14px;
    color: #ef67a8;
    text-decoration: underline; }
  .au-reference-list ul li {
    padding-left: 6px; }
  .au-reference-list ul.no-bullet {
    list-style-type: none; }

au-tag {
  -webkit-box-flex: 0;
  -webkit-flex: 0 1 auto;
  -moz-flex: 0 1 auto;
  -ms-flex: 0 1 auto;
  flex: 0 1 auto;
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
  background: white;
  border: 1px solid rgba(0, 0, 0, 0.12);
  border-radius: 4px;
  color: gray;
  display: inline-block;
  font-size: 10px;
  line-height: 1.5;
  margin: 0 5px;
  padding: 2px 7px; }

select.au-tag {
  background-color: white;
  padding: 4px;
  border-radius: 2px;
  color: #808080;
  border: 1px solid rgba(0, 0, 0, 0.12);
  font-size: 14px; }

ul.stack-list {
  font-size: 1em;
  line-height: 1.5;
  margin-left: 0;
  list-style: initial; }
  ul.stack-list li a {
    font-weight: 300;
    font-size: 1em; }
  ul.stack-list[no-bullet] {
    list-style-type: none; }
  ul.stack-list[underline] li a {
    text-decoration: underline; }

ul.inline-list {
  -webkit-box-flex: 1;
  -webkit-flex: 1;
  -moz-flex: 1;
  -ms-flex: 1;
  flex: 1;
  -webkit-box-align: center;
  -ms-flex-align: center;
  -webkit-align-items: center;
  -moz-align-items: center;
  align-items: center;
  list-style: none;
  min-width: 100%;
  margin: 0.5em 0; }
  ul.inline-list li {
    -webkit-box-flex: 0;
    -webkit-flex: 0 1 auto;
    -moz-flex: 0 1 auto;
    -ms-flex: 0 1 auto;
    flex: 0 1 auto;
    margin: 0 2px; }
  ul.inline-list li[list-heading] {
    font-weight: 800;
    font-size: 0.9em;
    opacity: 0.5; }
    ul.inline-list li[list-heading]:after {
      -webkit-box-flex: 1;
      -webkit-flex: 1;
      -moz-flex: 1;
      -ms-flex: 1;
      flex: 1;
      content: ": ";
      display: -webkit-box;
      display: -webkit-flex;
      display: -ms-flexbox;
      display: flex; }
  ul.inline-list li[list-item] {
    font-size: 0.8em; }
    ul.inline-list li[list-item]:not(:last-child):after {
      -webkit-box-flex: 1;
      -webkit-flex: 1;
      -moz-flex: 1;
      -ms-flex: 1;
      flex: 1;
      content: ", ";
      display: -webkit-box;
      display: -webkit-flex;
      display: -ms-flexbox;
      display: flex; }

au-icon,
au-icon.au-icon i,
au-icon.au-icon i:before {
  font-family: "aIcons"; }

au-icon.au-icon {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  font-size: 1.5em;
  font-weight: normal;
  height: 2em;
  width: 2em;
  position: relative;
  -webkit-box-align: center;
  -ms-flex-align: center;
  -webkit-align-items: center;
  -moz-align-items: center;
  align-items: center; }
  au-icon.au-icon[icon-auto] {
    width: auto;
    height: auto; }
  au-icon.au-icon[icon-2x] {
    width: 2em;
    height: 2em; }
  au-icon.au-icon[icon-3x] {
    width: 3em;
    height: 3em; }
  au-icon.au-icon[icon-4x] {
    width: 4em;
    height: 4em; }
  au-icon.au-icon[size-2x] {
    font-size: 2em; }
  au-icon.au-icon[size-3x] {
    font-size: 3em; }
  au-icon.au-icon[size-4x] {
    font-size: 4em; }
  au-icon.au-icon[fit] {
    width: 100%;
    height: 100%; }
  au-icon.au-icon[fit-x] {
    width: 100%; }
  au-icon.au-icon[fit-y] {
    height: 100%; }
  au-icon.au-icon[align-left] {
    -webkit-box-pack: start;
    -ms-flex-pack: start;
    -webkit-justify-content: flex-start;
    -moz-justify-content: flex-start;
    justify-content: flex-start; }
  au-icon.au-icon[align-right] {
    -webkit-box-pack: end;
    -ms-flex-pack: end;
    -webkit-justify-content: flex-end;
    -moz-justify-content: flex-end;
    justify-content: flex-end; }
  au-icon.au-icon[align-center] {
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    -webkit-justify-content: center;
    -moz-justify-content: center;
    justify-content: center; }
  au-icon.au-icon[align-top] {
    -webkit-box-align: start;
    -ms-flex-align: start;
    -webkit-align-items: flex-start;
    -moz-align-items: flex-start;
    align-items: flex-start; }
  au-icon.au-icon[align-middle] {
    -webkit-box-align: center;
    -ms-flex-align: center;
    -webkit-align-items: center;
    -moz-align-items: center;
    align-items: center; }
  au-icon.au-icon[align-bottom] {
    -webkit-box-align: end;
    -ms-flex-align: end;
    -webkit-align-items: flex-end;
    -moz-align-items: flex-end;
    align-items: flex-end; }

.profile-selector {
  display: -webkit-box;
  display: -webkit-flex;
  display: -moz-flex;
  display: -ms-flexbox;
  display: flex; }

@media (max-width: 47em) {
  .profile-selector {
    display: none; } }

@media (min-width: 48em) {
  ul.inline-list {
    margin: 0.75em 0 !important; }
  [gutter] {
    padding-left: 24px !important;
    padding-right: 24px !important; }
  [half-gutter] {
    padding-left: 12px !important;
    padding-right: 12px !important; }
  [gutter="2x"] {
    padding-left: 48px !important;
    padding-right: 48px !important; } }

au-select-list {
  -webkit-transform: translate3d(0, 0, 0);
  -ms-transform: translate3d(0, 0, 0);
  transform: translate3d(0, 0, 0);
  -webkit-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  -webkit-transition-duration: 200ms;
  transition-duration: 200ms;
  -webkit-transform-origin: center;
  -ms-transform-origin: center;
  transform-origin: center;
  min-width: 100%;
  max-width: 100%; }
  au-select-list.active-item {
    -webkit-transform: translate3d(-100%, 0, 0);
    -ms-transform: translate3d(-100%, 0, 0);
    transform: translate3d(-100%, 0, 0); }
  au-select-list au-select-item {
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    line-height: 3em; }
    au-select-list au-select-item select-container {
      -webkit-box-direction: normal;
      -webkit-box-orient: vertical;
      -webkit-flex-direction: column;
      -moz-flex-direction: column;
      -ms-flex-direction: column;
      flex-direction: column;
      -webkit-transform: translate3d(100%, 0, 0);
      -ms-transform: translate3d(100%, 0, 0);
      transform: translate3d(100%, 0, 0);
      min-width: 100%;
      overflow: auto;
      position: absolute;
      line-height: inherit;
      right: 0; }
      au-select-list au-select-item select-container div.select-option {
        -webkit-flex-shrink: 0;
        -ms-flex-negative: 0;
        flex-shrink: 0;
        cursor: pointer;
        line-height: inherit;
        padding-left: 16px; }
        au-select-list au-select-item select-container div.select-option .au-icon {
          position: absolute;
          right: 0;
          top: 0;
          z-index: 1; }
    au-select-list au-select-item:not(:first-child) select-container {
      top: 0; }
    au-select-list au-select-item select-item {
      -webkit-box-flex: 1;
      -webkit-flex: 1 0;
      -moz-flex: 1 0;
      -ms-flex: 1 0;
      flex: 1 0;
      position: relative;
      cursor: pointer;
      line-height: inherit;
      padding-left: 16px; }
      au-select-list au-select-item select-item span {
        text-align: right;
        padding-right: 16px;
        -webkit-box-flex: 1;
        -webkit-flex: 1;
        -moz-flex: 1;
        -ms-flex: 1;
        flex: 1; }
      au-select-list au-select-item select-item .ai-icon[caret] {
        -webkit-box-flex: 0;
        -webkit-flex: 0 1 auto;
        -moz-flex: 0 1 auto;
        -ms-flex: 0 1 auto;
        flex: 0 1 auto;
        line-height: inherit;
        padding-right: 16px;
        color: theme-light(icon); }
        au-select-list au-select-item select-item .ai-icon[caret] i {
          line-height: inherit;
          -webkit-transform: rotate(-90deg);
          -ms-transform: rotate(-90deg);
          transform: rotate(-90deg); }
  au-select-list select {
    visibility: hidden;
    height: 0;
    width: 0; }

@media (min-width: 0) {
  au-select-list au-select-item select-item {
    padding-left: 16px; }
    au-select-list au-select-item select-item span,
    au-select-list au-select-item select-item .ai-icon[caret] {
      padding-right: 16px; } }

@media (min-width: 48em) {
  au-select-list au-select-item select-item {
    padding-left: 24px; }
    au-select-list au-select-item select-item span,
    au-select-list au-select-item select-item .ai-icon[caret] {
      padding-right: 24px; } }

body, body header.au-header, body main.main-host, body main.main-host router-view.main-view-port main.page-host, body main.main-host router-view.main-view-port main.page-host router-view.page-view-port au-view.content, body header.au-header nav.au-navbar, body main.main-host router-view.main-view-port main.page-host router-view.page-view-port {
  position: relative; }

body header.au-header nav.au-navbar, body main.main-host router-view.main-view-port main.page-host router-view.page-view-port, body main.main-host router-view.main-view-port main.page-host router-view.page-view-port au-view.content {
  -webkit-box-flex: 1;
  -webkit-flex: 1 0 auto;
  -moz-flex: 1 0 auto;
  -ms-flex: 1 0 auto;
  flex: 1 0 auto; }

body main.main-host {
  -webkit-box-flex: 1;
  -webkit-flex: 1;
  -moz-flex: 1;
  -ms-flex: 1;
  flex: 1; }

body main.main-host router-view.main-view-port main.page-host router-view.page-view-port au-view.content {
   }

section.au-card.title-card > header h1 {
  color: #70519E;
  position: relative;
  text-align: center;
  font-weight: 300;
  font-size: 2rem;
  line-height: 1;
  margin: 16px 0; }

section.au-card > header h1 {
  font-size: 1.5rem;
  line-height: 2;
  font-weight: 300;
  margin: 0;
  position: relative; }

section.au-card > blockquote h1 {
  font-size: 1rem;
  line-height: 2;
  font-weight: 500;
  margin: 0;
  position: relative; }

section.au-card {
  -webkit-box-flex: 1;
  -webkit-flex: 1 0 auto;
  -moz-flex: 1 0 auto;
  -ms-flex: 1 0 auto;
  flex: 1 0 auto;
  background: transparent;
  position: relative;
  border: 1px solid #dadada;
  overflow: hidden;
  max-height: 100%;
  margin-bottom: 1em; }
  section.au-card > header {
    -webkit-flex-wrap: wrap;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap;
    min-height: 4em;
    position: relative; }
    section.au-card > header:after {
      content: " ";
      background-color: #eeeeee;
      background: #eeeeee;
      position: absolute;
      height: 1px;
      max-height: 1px; }
    section.au-card > header h1 {
      -webkit-box-flex: 1;
      -webkit-flex: 1 0 auto;
      -moz-flex: 1 0 auto;
      -ms-flex: 1 0 auto;
      flex: 1 0 auto;
      padding-left: 0.5em; }
    section.au-card > header h2, section.au-card > header h3, section.au-card > header h4, section.au-card > header h5 {
      -webkit-box-flex: 1;
      -webkit-flex: 1 0 auto;
      -moz-flex: 1 0 auto;
      -ms-flex: 1 0 auto;
      flex: 1 0 auto;
      -webkit-box-pack: center;
      -ms-flex-pack: center;
      -webkit-justify-content: center;
      -moz-justify-content: center;
      justify-content: center;
      line-height: inherit;
      margin: 1em 0;
      color: #EC2685; }
    section.au-card > header h1 + h2,
    section.au-card > header h1 + h3,
    section.au-card > header h1 + h4,
    section.au-card > header h1 + h5,
    section.au-card > header h1 + h6 {
      margin-top: 0; }
    section.au-card > header span.card-control {
      -webkit-box-align: center;
      -ms-flex-align: center;
      -webkit-align-items: center;
      -moz-align-items: center;
      align-items: center;
      -webkit-box-pack: center;
      -ms-flex-pack: center;
      -webkit-justify-content: center;
      -moz-justify-content: center;
      justify-content: center;
      min-width: 100%;
      position: relative;
      min-height: 100%;
      padding: 0 1em 1em; }
  section.au-card > blockquote {
    background-color: white;
    padding: 1em 1em 0;
    position: relative;
    overflow-x: auto;
    max-width: 100%; }
    section.au-card > blockquote h1 {
      -webkit-box-flex: 1;
      -webkit-flex: 1;
      -moz-flex: 1;
      -ms-flex: 1;
      flex: 1;
      display: block;
      padding: 0 0;
      position: relative; }
      section.au-card > blockquote h1:after {
        content: " ";
        background-color: #eeeeee;
        background: #eeeeee;
        position: absolute;
        height: 1px;
        max-height: 1px; }
    section.au-card > blockquote [description] {
      font-weight: 300;
      opacity: 0.5;
      font-size: 1em;
      line-height: 1.2; }
  section.au-card article {
    -webkit-box-flex: 1;
    -webkit-flex: 1 0 auto;
    -moz-flex: 1 0 auto;
    -ms-flex: 1 0 auto;
    flex: 1 0 auto;
    background-color: white;
    padding-top: 8px;
    padding-bottom: 1.5em; }
    section.au-card article > h3[description] {
      line-height: 1.5;
      position: relative;
      margin: 0; }
      section.au-card article > h3[description]:after {
        content: " ";
        background-color: rgba(0, 0, 0, 0.12);
        background: rgba(0, 0, 0, 0.12);
        position: absolute;
        height: 1px;
        max-height: 1px; }
    section.au-card article:not([gutter]) {
      padding-left: 1.5em;
      padding-right: 1.5em; }
    section.au-card article > *:not(:last-child) {
      margin-bottom: 0.75em; }
  section.au-card.title-card > header {
    background-color: transparent; }
    section.au-card.title-card > header h1 {
      padding: 0; }

section.au-card + h1 {
  padding-top: 0;
  padding-bottom: 0;
  margin: 0.5em 0 0.5em 0; }

@media (min-width: 48em) {
  section.au-card {
    margin-bottom: 1.5em;
    border-radius: 4px; }
    section.au-card header {
      padding: 0 1.5em; }
      section.au-card header span.card-control {
        right: 0;
        top: 0;
        position: absolute;
        min-width: 0;
        padding: 0 1em; }
    section.au-card blockquote {
      padding: 1.5em 1.5em 0; }
    section.au-card article {
      padding-top: 8px;
      padding-bottom: 1.5em; }
      section.au-card article:not([gutter]) {
        padding-left: 1.5em;
        padding-right: 1.5em; }
      section.au-card article > *:not(:last-child) {
        margin-bottom: 0.75em; }
  section.au-card + h1 {
    margin-bottom: 0.75em; } }

au-overlay {
  display: block;
  min-height: 100vh;
  min-width: 100vw;
  position: absolute;
  top: 0;
  left: 0; }
  au-overlay overlay {
    background-color: rgba(0, 0, 0, 0.5);
    display: block;
    min-height: 300vw;
    min-width: 200vw;
    position: absolute;
    top: -25vw;
    left: -25vw;
    z-index: 1; }

au-overlay overlay {
  -webkit-animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  -webkit-animation-duration: 200ms;
  animation-duration: 200ms;
  -webkit-transform: scale(1);
  -ms-transform: scale(1);
  transform: scale(1);
  -webkit-animation-direction: forwards;
  animation-direction: forwards;
  -webkit-animation: scale-from-small-to-large 300ms;
  animation: scale-from-small-to-large 300ms; }

au-overlay overlay.au-leave {
  -webkit-animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  -webkit-animation-duration: 200ms;
  animation-duration: 200ms;
  -webkit-transform: scale(1);
  -ms-transform: scale(1);
  transform: scale(1);
  -webkit-animation-direction: forwards;
  animation-direction: forwards;
  -webkit-animation: scale-from-large-to-small 300ms;
  animation: scale-from-large-to-small 300ms; }

@keyframes scale-from-small-to-large {
  from {
    -webkit-transform: scale(0);
    -ms-transform: scale(0);
    transform: scale(0); }
  to {
    -webkit-transform: scale(1);
    -ms-transform: scale(1);
    transform: scale(1); } }

@-webkit-keyframes scale-from-small-to-large {
  from {
    -webkit-transform: scale(0);
    -ms-transform: scale(0);
    transform: scale(0); }
  to {
    -webkit-transform: scale(1);
    -ms-transform: scale(1);
    transform: scale(1); } }

@keyframes scale-from-large-to-small {
  from {
    -webkit-transform: scale(0);
    -ms-transform: scale(0);
    transform: scale(0); }
  to {
    -webkit-transform: scale(1);
    -ms-transform: scale(1);
    transform: scale(1); } }

@-webkit-keyframes scale-from-large-to-small {
  from {
    -webkit-transform: scale(0);
    -ms-transform: scale(0);
    transform: scale(0); }
  to {
    -webkit-transform: scale(1);
    -ms-transform: scale(1);
    transform: scale(1); } }

@font-face {
  font-family: octicons-anchor;
  src: url(data:font/woff;charset=utf-8;base64,d09GRgABAAAAAAYcAA0AAAAACjQAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAABGRlRNAAABMAAAABwAAAAca8vGTk9TLzIAAAFMAAAARAAAAFZG1VHVY21hcAAAAZAAAAA+AAABQgAP9AdjdnQgAAAB0AAAAAQAAAAEACICiGdhc3AAAAHUAAAACAAAAAj//wADZ2x5ZgAAAdwAAADRAAABEKyikaNoZWFkAAACsAAAAC0AAAA2AtXoA2hoZWEAAALgAAAAHAAAACQHngNFaG10eAAAAvwAAAAQAAAAEAwAACJsb2NhAAADDAAAAAoAAAAKALIAVG1heHAAAAMYAAAAHwAAACABEAB2bmFtZQAAAzgAAALBAAAFu3I9x/Nwb3N0AAAF/AAAAB0AAAAvaoFvbwAAAAEAAAAAzBdyYwAAAADP2IQvAAAAAM/bz7t4nGNgZGFgnMDAysDB1Ml0hoGBoR9CM75mMGLkYGBgYmBlZsAKAtJcUxgcPsR8iGF2+O/AEMPsznAYKMwIkgMA5REMOXicY2BgYGaAYBkGRgYQsAHyGMF8FgYFIM0ChED+h5j//yEk/3KoSgZGNgYYk4GRCUgwMaACRoZhDwCs7QgGAAAAIgKIAAAAAf//AAJ4nHWMMQrCQBBF/0zWrCCIKUQsTDCL2EXMohYGSSmorScInsRGL2DOYJe0Ntp7BK+gJ1BxF1stZvjz/v8DRghQzEc4kIgKwiAppcA9LtzKLSkdNhKFY3HF4lK69ExKslx7Xa+vPRVS43G98vG1DnkDMIBUgFN0MDXflU8tbaZOUkXUH0+U27RoRpOIyCKjbMCVejwypzJJG4jIwb43rfl6wbwanocrJm9XFYfskuVC5K/TPyczNU7b84CXcbxks1Un6H6tLH9vf2LRnn8Ax7A5WQAAAHicY2BkYGAA4teL1+yI57f5ysDNwgAC529f0kOmWRiYVgEpDgYmEA8AUzEKsQAAAHicY2BkYGB2+O/AEMPCAAJAkpEBFbAAADgKAe0EAAAiAAAAAAQAAAAEAAAAAAAAKgAqACoAiAAAeJxjYGRgYGBhsGFgYgABEMkFhAwM/xn0QAIAD6YBhwB4nI1Ty07cMBS9QwKlQapQW3VXySvEqDCZGbGaHULiIQ1FKgjWMxknMfLEke2A+IJu+wntrt/QbVf9gG75jK577Lg8K1qQPCfnnnt8fX1NRC/pmjrk/zprC+8D7tBy9DHgBXoWfQ44Av8t4Bj4Z8CLtBL9CniJluPXASf0Lm4CXqFX8Q84dOLnMB17N4c7tBo1AS/Qi+hTwBH4rwHHwN8DXqQ30XXAS7QaLwSc0Gn8NuAVWou/gFmnjLrEaEh9GmDdDGgL3B4JsrRPDU2hTOiMSuJUIdKQQayiAth69r6akSSFqIJuA19TrzCIaY8sIoxyrNIrL//pw7A2iMygkX5vDj+G+kuoLdX4GlGK/8Lnlz6/h9MpmoO9rafrz7ILXEHHaAx95s9lsI7AHNMBWEZHULnfAXwG9/ZqdzLI08iuwRloXE8kfhXYAvE23+23DU3t626rbs8/8adv+9DWknsHp3E17oCf+Z48rvEQNZ78paYM38qfk3v/u3l3u3GXN2Dmvmvpf1Srwk3pB/VSsp512bA/GG5i2WJ7wu430yQ5K3nFGiOqgtmSB5pJVSizwaacmUZzZhXLlZTq8qGGFY2YcSkqbth6aW1tRmlaCFs2016m5qn36SbJrqosG4uMV4aP2PHBmB3tjtmgN2izkGQyLWprekbIntJFing32a5rKWCN/SdSoga45EJykyQ7asZvHQ8PTm6cslIpwyeyjbVltNikc2HTR7YKh9LBl9DADC0U/jLcBZDKrMhUBfQBvXRzLtFtjU9eNHKin0x5InTqb8lNpfKv1s1xHzTXRqgKzek/mb7nB8RZTCDhGEX3kK/8Q75AmUM/eLkfA+0Hi908Kx4eNsMgudg5GLdRD7a84npi+YxNr5i5KIbW5izXas7cHXIMAau1OueZhfj+cOcP3P8MNIWLyYOBuxL6DRylJ4cAAAB4nGNgYoAALjDJyIAOWMCiTIxMLDmZedkABtIBygAAAA==) format("woff"); }

au-preview {
  -webkit-box-flex: 1;
  -webkit-flex: 1;
  -moz-flex: 1;
  -ms-flex: 1;
  flex: 1;
  -webkit-box-direction: normal;
  -webkit-box-orient: vertical;
  -webkit-flex-direction: column;
  -moz-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column; }
  au-preview example, au-preview narrative {
    -webkit-box-flex: 1;
    -webkit-flex: 1;
    -moz-flex: 1;
    -ms-flex: 1;
    flex: 1;
    -webkit-box-direction: normal;
    -webkit-box-orient: vertical;
    -webkit-flex-direction: column;
    -moz-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    -webkit-text-size-adjust: 100%;
    -ms-text-size-adjust: 100%;
        text-size-adjust: 100%;
    color: #333;
    font-family: "Helvetica Neue", Helvetica, "Segoe UI", Arial, freesans, sans-serif;
    font-size: 16px;
    line-height: 1.6;
    word-wrap: break-word; }

au-preview example h1, au-preview example h2, au-preview example h3, au-preview example h4, au-preview example h5, au-preview example h6,
au-preview narrative h1,
au-preview narrative h2,
au-preview narrative h3,
au-preview narrative h4,
au-preview narrative h5,
au-preview narrative h6 {
  margin-top: 15px;
  margin-bottom: 15px;
  line-height: 1.1;
  margin-top: 1em;
  margin-bottom: 16px;
  font-weight: bold;
  line-height: 1.4; }
  au-preview example h1:hover, au-preview example h2:hover, au-preview example h3:hover, au-preview example h4:hover, au-preview example h5:hover, au-preview example h6:hover,
  au-preview narrative h1:hover,
  au-preview narrative h2:hover,
  au-preview narrative h3:hover,
  au-preview narrative h4:hover,
  au-preview narrative h5:hover,
  au-preview narrative h6:hover {
    text-decoration: none; }

au-preview example h1,
au-preview narrative h1 {
  font-size: 30px; }

au-preview example h2,
au-preview narrative h2 {
  font-size: 21px; }

au-preview example h3,
au-preview narrative h3 {
  font-size: 16px; }

au-preview example h4,
au-preview narrative h4 {
  font-size: 14px; }

au-preview example h5,
au-preview narrative h5 {
  font-size: 12px; }

au-preview example h6,
au-preview narrative h6 {
  font-size: 11px; }

au-preview example blockquote,
au-preview narrative blockquote {
  margin: 0; }

au-preview example ul, au-preview example ol,
au-preview narrative ul,
au-preview narrative ol {
  padding: 0;
  margin-top: 0;
  margin-bottom: 0; }

au-preview example ol ol,
au-preview example ul ol,
au-preview narrative ol ol,
au-preview narrative ul ol {
  list-style-type: lower-roman; }

au-preview example ul ul ol,
au-preview example ul ol ol,
au-preview example ol ul ol,
au-preview example ol ol ol,
au-preview narrative ul ul ol,
au-preview narrative ul ol ol,
au-preview narrative ol ul ol,
au-preview narrative ol ol ol {
  list-style-type: lower-alpha; }

au-preview example dd,
au-preview narrative dd {
  margin-left: 0; }

au-preview example h1,
au-preview narrative h1 {
  padding-bottom: 0.3em;
  font-size: 2.25em;
  line-height: 1.2;
  border-bottom: 1px solid #eee; }

au-preview example h1 .anchor,
au-preview narrative h1 .anchor {
  line-height: 1; }

au-preview example h2,
au-preview narrative h2 {
  padding-bottom: 0.3em;
  font-size: 1.75em;
  line-height: 1.225;
  border-bottom: 1px solid #eee; }

au-preview example h2 .anchor,
au-preview narrative h2 .anchor {
  line-height: 1; }

au-preview example h3,
au-preview narrative h3 {
  font-size: 1.5em;
  line-height: 1.43; }

au-preview example h3 .anchor,
au-preview narrative h3 .anchor {
  line-height: 1.2; }

au-preview example h4,
au-preview narrative h4 {
  font-size: 1.25em; }

au-preview example h4 .anchor,
au-preview narrative h4 .anchor {
  line-height: 1.2; }

au-preview example h5,
au-preview narrative h5 {
  font-size: 1em; }

au-preview example h5 .anchor,
au-preview narrative h5 .anchor {
  line-height: 1.1; }

au-preview example h6,
au-preview narrative h6 {
  font-size: 1em;
  color: #777; }

au-preview example h6 .anchor,
au-preview narrative h6 .anchor {
  line-height: 1.1; }

au-preview narrative a {
  background-color: transparent; }

au-preview narrative a:active,
au-preview narrative a:hover {
  outline: 0; }

au-preview narrative strong {
  font-weight: bold; }

au-preview narrative img {
  border: 0; }

au-preview narrative hr {
  box-sizing: content-box;
  height: 0; }

au-preview narrative pre {
  overflow: auto; }

au-preview narrative code,
au-preview narrative kbd,
au-preview narrative pre {
  font-family: monospace, monospace;
  font-size: 1em; }

au-preview narrative input {
  color: inherit;
  font: inherit;
  margin: 0; }

au-preview narrative html input[disabled] {
  cursor: default; }

au-preview narrative input {
  line-height: normal; }

au-preview narrative input[type="checkbox"] {
  box-sizing: border-box;
  padding: 0; }

au-preview narrative table {
  border-collapse: collapse;
  border-spacing: 0; }

au-preview narrative td,
au-preview narrative th {
  padding: 0; }

au-preview narrative input {
  font: 13px/1.4 Helvetica, arial, nimbussansl, liberationsans, freesans, clean, sans-serif, "Segoe UI Emoji", "Segoe UI Symbol"; }

au-preview narrative a {
  color: #4078c0;
  text-decoration: none; }

au-preview narrative a:hover,
au-preview narrative a:active {
  text-decoration: underline; }

au-preview narrative hr {
  height: 0;
  margin: 15px 0;
  overflow: hidden;
  background: transparent;
  border: 0;
  border-bottom: 1px solid #ddd; }

au-preview narrative hr:before {
  display: table;
  content: ""; }

au-preview narrative hr:after {
  display: table;
  clear: both;
  content: ""; }

au-preview narrative code {
  font-family: Consolas, "Liberation Mono", Menlo, Courier, monospace;
  font-size: 12px; }

au-preview narrative pre {
  margin-top: 0;
  margin-bottom: 0;
  font: 12px Consolas, "Liberation Mono", Menlo, Courier, monospace; }

au-preview narrative > *:first-child {
  margin-top: 0 !important; }

au-preview narrative > *:last-child {
  margin-bottom: 0 !important; }

au-preview narrative a:not([href]) {
  color: inherit;
  text-decoration: none; }

au-preview narrative .anchor {
  display: inline-block;
  padding-right: 2px;
  margin-left: -18px; }

au-preview narrative .anchor:focus {
  outline: none; }

au-preview narrative p,
au-preview narrative ul,
au-preview narrative ol,
au-preview narrative dl,
au-preview narrative pre,
au-preview narrative table,
au-preview narrative blockquote {
  margin-top: 0;
  margin-bottom: 16px; }

au-preview narrative hr,
au-preview narrative example hr {
  height: 4px;
  padding: 0;
  margin: 16px 0;
  background-color: #e7e7e7;
  border: 0 none; }

au-preview narrative ul,
au-preview narrative ol {
  padding-left: 2em; }

au-preview narrative ul ul,
au-preview narrative ul ol,
au-preview narrative ol ol,
au-preview narrative ol ul {
  margin-top: 0;
  margin-bottom: 0; }

au-preview narrative li > p {
  margin-top: 16px; }

au-preview narrative dl {
  padding: 0; }

au-preview narrative dl dt {
  padding: 0;
  margin-top: 16px;
  font-size: 1em;
  font-style: italic;
  font-weight: bold; }

au-preview narrative dl dd {
  padding: 0 16px;
  margin-bottom: 16px; }

au-preview narrative blockquote {
  padding: 0 15px;
  color: #777;
  border-left: 4px solid #ddd; }

au-preview narrative blockquote > :first-child {
  margin-top: 0; }

au-preview narrative blockquote > :last-child {
  margin-bottom: 0; }

au-preview narrative table {
  display: block;
  width: 100%;
  overflow: auto;
  word-break: normal;
  word-break: keep-all; }

au-preview narrative table th {
  font-weight: bold; }

au-preview narrative table th,
au-preview narrative table td {
  padding: 6px 13px;
  border: 1px solid #ddd; }

au-preview narrative table tr {
  background-color: #fff;
  border-top: 1px solid #ccc; }

au-preview narrative table tr:nth-child(2n) {
  background-color: #f8f8f8; }

au-preview narrative img {
  max-width: 100%;
  box-sizing: content-box;
  background-color: #fff; }

au-preview narrative code {
  padding: 0;
  padding-top: 0.2em;
  padding-bottom: 0.2em;
  margin: 0;
  font-size: 85%;
  background-color: rgba(0, 0, 0, 0.04);
  border-radius: 3px; }

au-preview narrative code:before,
au-preview narrative code:after {
  letter-spacing: -0.2em;
  content: "\00a0"; }

au-preview narrative pre > code {
  padding: 0;
  margin: 0;
  font-size: 100%;
  word-break: normal;
  white-space: pre;
  background: transparent;
  border: 0; }

au-preview narrative .highlight {
  margin-bottom: 16px; }

au-preview narrative .highlight pre,
au-preview narrative pre {
  padding: 16px;
  overflow: auto;
  font-size: 85%;
  line-height: 1.45;
  background-color: #f7f7f7;
  border-radius: 3px; }

au-preview narrative .highlight pre {
  margin-bottom: 0;
  word-break: normal; }

au-preview narrative pre {
  word-wrap: normal; }

au-preview narrative pre code {
  display: inline;
  max-width: initial;
  padding: 0;
  margin: 0;
  overflow: initial;
  line-height: inherit;
  word-wrap: normal;
  background-color: transparent;
  border: 0; }

au-preview narrative pre code:before,
au-preview narrative pre code:after {
  content: normal; }

au-preview example code[class*="language-"],
au-preview example pre[class*="language-"] {
  color: #333; }

au-preview example :not(pre) > code[class*="language-"],
au-preview example pre[class*="language-"] {
  background: #f7f7f7; }

au-preview example .token.comment,
au-preview example .token.prolog,
au-preview example .token.doctype,
au-preview example .token.cdata {
  color: #ed6a43; }

au-preview example .token.punctuation {
  color: #333; }

au-preview example .token.property,
au-preview example .token.tag,
au-preview example .token.boolean,
au-preview example .token.number,
au-preview example .token.constant,
au-preview example .token.symbol,
au-preview example .token.deleted {
  color: #0086b3; }

au-preview example .token.selector,
au-preview example .token.attr-name,
au-preview example .token.string,
au-preview example .token.char,
au-preview example .token.builtin,
au-preview example .token.inserted {
  color: #183691; }

au-preview example .token.operator,
au-preview example .token.entity,
au-preview example .token.url,
au-preview example .language-css .token.string,
au-preview example .style .token.string {
  color: #a71d5d;
  background: rgba(255, 255, 255, 0.5); }

au-preview example .token.atrule,
au-preview example .token.attr-value,
au-preview example .token.keyword {
  color: #a71d5d; }

au-preview example .token.function {
  color: #0086b3; }

au-preview example .token.regex,
au-preview example .token.important,
au-preview example .token.variable {
  color: #e90; }

au-preview example .token.important,
au-preview example .token.bold {
  font-weight: bold; }

au-preview example .token.italic {
  font-style: italic; }

au-preview example .token.entity {
  cursor: help; }

au-menu-indicator {
  -webkit-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  -webkit-transition-duration: 100ms;
  transition-duration: 100ms;
  -webkit-transform-origin: center;
  -ms-transform-origin: center;
  transform-origin: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: absolute;
  top: 0;
  height: 48px;
  width: 100%;
  padding-left: 8px;
  -webkit-box-align: center;
  -ms-flex-align: center;
  -webkit-align-items: center;
  -moz-align-items: center;
  align-items: center; }
  au-menu-indicator:before {
    content: " ";
    display: block;
    width: 10px;
    height: 20px;
    border-radius: 2px;
    background-color: white; }

au-menu.au-menu {
  position: relative;
  height: auto;
  min-width: 100%;
  list-style: none; }
  au-menu.au-menu li {
    position: relative;
    max-height: 48px;
    min-height: 48px;
    line-height: 48px;
    color: white;
    font-size: 16px;
    font-weight: 300;
    width: 100%;
    padding: 0;
    margin: 0;
    padding-left: 0; }
  au-menu.au-menu a {
    position: relative;
    display: block;
    padding-left: 28px; }
  au-menu.au-menu li.profile-selector {
    padding-left: 1em;
    border-bottom: 1px solid #CAC3C3;
    background-color: #E6E6E6;
    color: gray; }
    au-menu.au-menu li.profile-selector select {
      border: none;
      background-color: transparent;
      font-weight: bold;
      outline: 0; }
    au-menu.au-menu li.profile-selector select:-moz-focusring {
      color: transparent;
      text-shadow: 0 0 0 #000; }
  au-menu.au-menu li.active {
    color: white; }

@media (min-width: 48em) {
  au-menu-indicator:before {
    background-color: #EC2685; }
  .au-menu li a {
    color: #70519E; }
  .au-menu li.profile-selector {
    padding-left: 1em;
    border-bottom: 1px solid #CAC3C3;
    color: gray; }
    .au-menu li.profile-selector select {
      border: none;
      background-color: transparent;
      font-weight: bold;
      outline: 0; }
    .au-menu li.profile-selector select:-moz-focusring {
      color: transparent;
      text-shadow: 0 0 0 #000; }
  .au-aside > .au-menu li.profile-selector {
    padding-left: 1.5em; } }

au-dropdown {
  display: inline-block;
  position: relative;
  line-height: 1;
  min-width: auto;
  padding: 0 1em;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto; }
  au-dropdown button {
    padding: 0.6em 1rem;
    background-color: white;
    border-radius: 5px;
    border: 1px solid rgba(0, 0, 0, 0.12);
    min-width: 120px;
    font-size: 14px;
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    outline: 0;
    position: relative;
    cursor: pointer;
    text-align: center;
    white-space: nowrap;
    vertical-align: middle;
    -ms-touch-action: manipulation;
    touch-action: manipulation;
    -webkit-user-select: none;
       -moz-user-select: none;
        -ms-user-select: none;
            user-select: none;
    -webkit-tap-highlight-color: transparent;
    -webkit-font-smoothing: antialiased;
    box-shadow: 0 0 0 transparent;
    text-align: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    -webkit-align-items: center;
    -moz-align-items: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    -webkit-justify-content: center;
    -moz-justify-content: center;
    justify-content: center; }
  au-dropdown dropdown-container {
    background-color: white;
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    position: absolute;
    overflow-y: hidden;
    min-height: 0;
    min-width: 100%;
    top: 0;
    left: 0;
    z-index: 1;
    margin: 0 auto;
    -webkit-box-direction: normal;
    -webkit-box-orient: vertical;
    -webkit-flex-direction: column;
    -moz-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    -webkit-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    -webkit-transition-duration: 100ms;
    transition-duration: 100ms;
    -webkit-transform-origin: top;
    -ms-transform-origin: top;
    transform-origin: top;
    -webkit-transform: translateZ(0);
    -ms-transform: translateZ(0);
    transform: translateZ(0); }
    au-dropdown dropdown-container div[dropdown-item] {
      cursor: pointer;
      display: -webkit-box;
      display: -webkit-flex;
      display: -ms-flexbox;
      display: flex;
      min-width: 100%;
      height: 32px;
      font-size: 12px;
      font-weight: normal;
      max-height: 0;
      overflow: hidden;
      padding: 0 1rem;
      -webkit-box-align: center;
      -ms-flex-align: center;
      -webkit-align-items: center;
      -moz-align-items: center;
      align-items: center;
      -webkit-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
      transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
      -webkit-transition-duration: 100ms;
      transition-duration: 100ms;
      -webkit-transform-origin: top;
      -ms-transform-origin: top;
      transform-origin: top;
      -webkit-transform: scaleY(0);
      -ms-transform: scaleY(0);
      transform: scaleY(0); }
      au-dropdown dropdown-container div[dropdown-item] .au-icon {
        -webkit-box-flex: 1;
        -webkit-flex: 1;
        -moz-flex: 1;
        -ms-flex: 1;
        flex: 1;
        -webkit-box-pack: end;
        -ms-flex-pack: end;
        -webkit-justify-content: flex-end;
        -moz-justify-content: flex-end;
        justify-content: flex-end;
        color: #EC2685; }
      au-dropdown dropdown-container div[dropdown-item]:hover {
        background-color: rgba(0, 0, 0, 0.12); }
  au-dropdown.is-active dropdown-container div[dropdown-item] {
    max-height: 32px;
    -webkit-transform: scaleY(1);
    -ms-transform: scaleY(1);
    transform: scaleY(1); }

au-icon.au-icon i:before,
au-icon i:before, au-icon.au-icon.au-navicon i:before, au-icon.au-icon.au-ios-arrow-right i:before, au-icon.au-icon.au-checkmark i:before, au-settings-button content-wrap > button .au-icon i:before, au-settings-button.is-active content-wrap > button .au-icon i:before {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  speak: none;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  text-rendering: auto;
  line-height: 1;
  letter-spacing: normal;
  
  -webkit-font-smoothing: antialiased;
  
  text-rendering: optimizeLegibility;
  
  -moz-osx-font-smoothing: grayscale;
  
  -webkit-font-feature-settings: 'liga';
          font-feature-settings: 'liga'; }


au-icon.au-icon.au-navicon i:before {
  font-family: "aIcons";
  content: ""; }

au-icon.au-icon.au-ios-arrow-right i:before {
  font-family: "aIcons";
  content: ""; }

au-icon.au-icon.au-checkmark i:before {
  font-family: "aIcons";
  content: ""; }

au-settings-button {
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  position: absolute;
  bottom: 0;
  right: 0;
  height: auto;
  width: auto;
  border-top-left-radius: 200vw; }
  au-settings-button content-wrap {
    overflow: hidden;
    -webkit-box-align: end;
    -ms-flex-align: end;
    -webkit-align-items: flex-end;
    -moz-align-items: flex-end;
    align-items: flex-end;
    -webkit-box-pack: end;
    -ms-flex-pack: end;
    -webkit-justify-content: flex-end;
    -moz-justify-content: flex-end;
    justify-content: flex-end;
    z-index: 11;
    border-top-left-radius: 200vw;
    min-width: 100%;
    position: relative;
    -webkit-transform: translateZ(0);
    -ms-transform: translateZ(0);
    transform: translateZ(0); }
  au-settings-button settings-container {
    min-width: 100%;
    opacity: 0;
    outline: none;
    overflow: hidden;
    position: static;
    visibility: hidden;
    z-index: 1; }
    au-settings-button settings-container > au-select-list au-select-item {
      outline: none;
      position: static; }
      au-settings-button settings-container > au-select-list au-select-item select-item span:focus {
        outline: none; }
      au-settings-button settings-container > au-select-list au-select-item select-item:active, au-settings-button settings-container > au-select-list au-select-item select-item:focus {
        background-color: transparent;
        outline: none; }
      au-settings-button settings-container > au-select-list au-select-item select-item:after {
        content: " ";
        position: absolute;
        height: 1px;
        max-height: 1px;
        
        
        background: -webkit-gradient(linear, left top, right top, color-stop(0%, rgba(255, 255, 255, 0)), color-stop(100%, #777));
        
        background: -webkit-linear-gradient(left, rgba(255, 255, 255, 0), 0%, #777, 100%);
        
        
        
        background: linear-gradient(to right, rgba(255, 255, 255, 0), 0%, #777, 100%);
         }
      au-settings-button settings-container > au-select-list au-select-item select-container div.select-option {
        background-color: #EC2685;
        color: white;
        outline: none;
        position: relative;
        padding-left: 40%; }
        au-settings-button settings-container > au-select-list au-select-item select-container div.select-option:after {
          content: " ";
          position: absolute;
          height: 1px;
          max-height: 1px;
          
          
          background: -webkit-gradient(linear, left top, right top, color-stop(0%, rgba(255, 255, 255, 0)), color-stop(100%, white));
          
          background: -webkit-linear-gradient(left, rgba(255, 255, 255, 0), 0%, white, 100%);
          
          
          
          background: linear-gradient(to right, rgba(255, 255, 255, 0), 0%, white, 100%);
           }
    au-settings-button settings-container > au-dropdown {
      -webkit-align-self: flex-end;
      -ms-flex-item-align: end;
      align-self: flex-end; }
  au-settings-button content-wrap > button {
    -webkit-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    -webkit-transition-duration: 200ms;
    transition-duration: 200ms;
    -webkit-transform-origin: center;
    -ms-transform-origin: center;
    transform-origin: center;
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    outline: 0;
    position: relative;
    cursor: pointer;
    text-align: center;
    white-space: nowrap;
    vertical-align: middle;
    -ms-touch-action: manipulation;
    touch-action: manipulation;
    -webkit-user-select: none;
       -moz-user-select: none;
        -ms-user-select: none;
            user-select: none;
    -webkit-tap-highlight-color: transparent;
    -webkit-font-smoothing: antialiased;
    box-shadow: 0 0 0 transparent;
    text-align: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    -webkit-align-items: center;
    -moz-align-items: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    -webkit-justify-content: center;
    -moz-justify-content: center;
    justify-content: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    -webkit-justify-content: center;
    -moz-justify-content: center;
    justify-content: center;
    width: 64px;
    height: 64px;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.2);
    background-color: #777;
    border-radius: 64px;
    border: none;
    bottom: 0;
    color: white;
    font-size: 1.5em;
    margin: 24px;
    padding: 0;
    position: relative;
    right: 0;
    z-index: 1; }
    au-settings-button content-wrap > button:active, au-settings-button content-wrap > button:focus {
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2); }
    au-settings-button content-wrap > button .au-icon {
      -webkit-box-flex: 1;
      -webkit-flex: 1;
      -moz-flex: 1;
      -ms-flex: 1;
      flex: 1;
      -webkit-box-pack: center;
      -ms-flex-pack: center;
      -webkit-justify-content: center;
      -moz-justify-content: center;
      justify-content: center;
      font: normal normal normal 14px/1 FontAwesome;
      font-size: inherit;
      text-rendering: auto;
      -webkit-font-smoothing: antialiased;
      -moz-osx-font-smoothing: grayscale; }
    au-settings-button content-wrap > button .au-icon i:before {
      position: relative;
      font-family: "aIcons";
      content: "";
      -webkit-transform: translateZ(0) rotate(0deg);
      -ms-transform: translateZ(0) rotate(0deg);
      transform: translateZ(0) rotate(0deg);
      -webkit-transition: all 200ms cubic-bezier(0.455, 0.03, 0.515, 0.955);
      transition: all 200ms cubic-bezier(0.455, 0.03, 0.515, 0.955); }
  au-settings-button div.exploding-circle {
    position: absolute;
    right: -100vw;
    bottom: -100vw;
    min-width: 200vw;
    min-height: 200vw;
    border-radius: 100%;
    background-color: white;
    z-index: 10;
    -webkit-transition-timing-function: cubic-bezier(0, 1.28, 0, 1);
    transition-timing-function: cubic-bezier(0, 1.28, 0, 1);
    -webkit-transition-duration: 300ms;
    transition-duration: 300ms;
    -webkit-transform: translateZ(0) scale(0);
    -ms-transform: translateZ(0) scale(0);
    transform: translateZ(0) scale(0); }
  au-settings-button.is-active {
    -webkit-transition: box-shadow 100ms ease 100ms;
    transition: box-shadow 100ms ease 100ms;
    height: 100vw;
    min-width: 100vw;
    overflow: hidden; }
    au-settings-button.is-active settings-container {
      visibility: visible;
      opacity: 1; }
    au-settings-button.is-active content-wrap > button {
      background-color: #70519E; }
      au-settings-button.is-active content-wrap > button .au-icon i:before {
        font-family: "aIcons";
        content: "";
        -webkit-transform: translateZ(0) rotate(360deg);
        -ms-transform: translateZ(0) rotate(360deg);
        transform: translateZ(0) rotate(360deg); }
    au-settings-button.is-active div.exploding-circle {
      -webkit-transform: translateZ(0) scale(1);
      -ms-transform: translateZ(0) scale(1);
      transform: translateZ(0) scale(1); }

@media (min-width: 48em) {
  au-settings-button {
    display: none; } }

@font-face {
  font-family: "aIcons";
  src: url("lib/font/aicon/aicons.eot?v=2.0.0");
  src: url("lib/font/aicon/aicons.eot?v=2.0.0#iefix") format("embedded-opentype"), url("lib/font/aicon/aicons.ttf?v=2.0.0") format("truetype"), url("lib/font/aicon/aicons.woff?v=2.0.0") format("woff"), url("lib/font/aicon/aicons.svg?v=2.0.0#Ionicons") format("svg");
  font-weight: normal;
  font-style: normal; }

html, body {
  overflow: hidden;
  height: 100vh;
  width: 100vw;
  -webkit-transform: translate3d(0, 0, 0);
  -ms-transform: translate3d(0, 0, 0);
  transform: translate3d(0, 0, 0); }

body header.au-header {
  -webkit-box-flex: 0;
  -webkit-flex: 0 0 5rem;
  -moz-flex: 0 0 5rem;
  -ms-flex: 0 0 5rem;
  flex: 0 0 5rem;
  -webkit-flex-wrap: nowrap;
  -ms-flex-wrap: none;
  flex-wrap: nowrap;
  min-width: 100%;
  max-height: 5rem; }
  body header.au-header nav.au-navbar {
    -webkit-box-flex: 0;
    -webkit-flex: 0 0 5rem;
    -moz-flex: 0 0 5rem;
    -ms-flex: 0 0 5rem;
    flex: 0 0 5rem; }

body au-aside.au-aside nav.au-tabs {
  -webkit-box-flex: 0;
  -webkit-flex: 0 0 3rem;
  -moz-flex: 0 0 3rem;
  -ms-flex: 0 0 3rem;
  flex: 0 0 3rem; }

body main.main-host {
  height: auto; }
  body main.main-host router-view.main-view-port {
    -webkit-box-flex: 1;
    -webkit-flex: 1 0 auto;
    -moz-flex: 1 0 auto;
    -ms-flex: 1 0 auto;
    flex: 1 0 auto;
    -webkit-transform: translate3d(0, 0, 0);
    -ms-transform: translate3d(0, 0, 0);
    transform: translate3d(0, 0, 0);
    height: 100%;
    max-height: 100%;
    min-width: 100%;
    overflow: hidden;
    position: absolute;
    -webkit-backface-visibility: hidden;
            backface-visibility: hidden;
    will-change: overflow; }
    body main.main-host router-view.main-view-port au-menu {
      display: none; }
    body main.main-host router-view.main-view-port main.page-host {
      -webkit-box-flex: 1;
      -webkit-flex: 1 0 auto;
      -moz-flex: 1 0 auto;
      -ms-flex: 1 0 auto;
      flex: 1 0 auto; }
      body main.main-host router-view.main-view-port main.page-host router-view.page-view-port {
        height: auto; }
        body main.main-host router-view.main-view-port main.page-host router-view.page-view-port au-view.content {
          position: absolute;
          min-width: 100%;
          max-width: 100%;
          height: auto;
          -webkit-transform: translate3d(0, 0, 0);
          -ms-transform: translate3d(0, 0, 0);
          transform: translate3d(0, 0, 0); }

body.active-navigation-aside nav.au-navbar,
body.active-navigation-aside main.page-host, body.active-navigation-settings nav.au-navbar,
body.active-navigation-settings main.page-host {
  -webkit-filter: blur(10px);
  -moz-filter: blur(10px);
  filter: blur(10px); }

@media (min-width: 0) {
  body header.au-header > nav.au-navbar {
    width: 100vw;
    height: 5rem;
    line-height: 5rem;
    background-color: #796F88;
    content: " ";
    background: white;
    box-shadow: 0px 3px 2px -1px rgba(0, 0, 0, 0.2);
    border-bottom: 1px solid #CCCCCC; }
    body header.au-header > nav.au-navbar nav-item {
      cursor: pointer;
      -webkit-box-align: start;
      -ms-flex-align: start;
      -webkit-align-items: flex-start;
      -moz-align-items: flex-start;
      align-items: flex-start;
      position: relative;
      height: inherit;
      min-width: 1px;
      min-height: 5rem;
      line-height: 5rem; }
    body header.au-header > nav.au-navbar nav-item[logo],
    body header.au-header > nav.au-navbar nav-item[menu],
    body header.au-header > nav.au-navbar nav-item[title],
    body header.au-header > nav.au-navbar nav-item[search],
    body header.au-header > nav.au-navbar nav-item[right] {
      max-height: inherit; }
    body header.au-header > nav.au-navbar nav-item[search],
    body header.au-header > nav.au-navbar nav-item[right] {
      -webkit-box-flex: 1;
      -webkit-flex: 1 0 auto;
      -moz-flex: 1 0 auto;
      -ms-flex: 1 0 auto;
      flex: 1 0 auto;
      -webkit-box-pack: end;
      -ms-flex-pack: end;
      -webkit-justify-content: flex-end;
      -moz-justify-content: flex-end;
      justify-content: flex-end; }
    body header.au-header > nav.au-navbar nav-item[menu] {
      -webkit-box-align: center;
      -ms-flex-align: center;
      -webkit-align-items: center;
      -moz-align-items: center;
      align-items: center;
      padding-left: 16px;
      font-size: 2em;
      color: #EC2685; }
    body header.au-header > nav.au-navbar nav-item[logo] {
      -webkit-flex-shrink: 0;
      -ms-flex-negative: 0;
      flex-shrink: 0;
      -webkit-flex-basis: auto;
      -ms-flex-preferred-size: auto;
      flex-basis: auto;
      -webkit-box-align: center;
      -ms-flex-align: center;
      -webkit-align-items: center;
      -moz-align-items: center;
      align-items: center;
      margin-left: 24px;
      margin-right: 24px; }
      body header.au-header > nav.au-navbar nav-item[logo] a[logo] {
        -webkit-box-align: center;
        -ms-flex-align: center;
        -webkit-align-items: center;
        -moz-align-items: center;
        align-items: center;
        -webkit-box-pack: end;
        -ms-flex-pack: end;
        -webkit-justify-content: flex-end;
        -moz-justify-content: flex-end;
        justify-content: flex-end;
        -webkit-box-flex: 0;
        -webkit-flex: 0 1 auto;
        -moz-flex: 0 1 auto;
        -ms-flex: 0 1 auto;
        flex: 0 1 auto;
        position: relative;
        padding-right: 8px;
        margin-right: 16px;
        width: 100%;
        margin-bottom: 7px; }
        body header.au-header > nav.au-navbar nav-item[logo] a[logo]:after {
          content: " ";
          background-color: rgba(0, 0, 0, 0.12);
          background: rgba(0, 0, 0, 0.12);
          position: absolute;
          width: 1px;
          max-width: 1px; }
      body header.au-header > nav.au-navbar nav-item[logo] a[title] {
        -webkit-box-align: center;
        -ms-flex-align: center;
        -webkit-align-items: center;
        -moz-align-items: center;
        align-items: center;
        -webkit-box-pack: end;
        -ms-flex-pack: end;
        -webkit-justify-content: flex-end;
        -moz-justify-content: flex-end;
        justify-content: flex-end;
        -webkit-box-flex: 1;
        -webkit-flex: 1 0 auto;
        -moz-flex: 1 0 auto;
        -ms-flex: 1 0 auto;
        flex: 1 0 auto;
        display: -webkit-box;
        display: -webkit-flex;
        display: -ms-flexbox;
        display: flex;
        font-size: 25px;
        font-weight: 300;
        color: #70519E;
        position: relative; }
      body header.au-header > nav.au-navbar nav-item[logo] img {
        width: 100%;
        max-width: 146px;
        display: inline-block; }
    body header.au-header > nav.au-navbar nav-item[au-tabs] {
      -webkit-box-ordinal-group: 1;
      -webkit-order: 0;
      -moz-order: 0;
      -ms-flex-order: 0;
      order: 0;
      -webkit-box-flex: 1;
      -webkit-flex: 1 0 auto;
      -moz-flex: 1 0 auto;
      -ms-flex: 1 0 auto;
      flex: 1 0 auto;
      -webkit-box-pack: center;
      -ms-flex-pack: center;
      -webkit-justify-content: center;
      -moz-justify-content: center;
      justify-content: center;
      -webkit-box-align: center;
      -ms-flex-align: center;
      -webkit-align-items: center;
      -moz-align-items: center;
      align-items: center;
      height: auto;
      line-height: inherit;
      min-width: 1px; }
      body header.au-header > nav.au-navbar nav-item[au-tabs] > a[tab-item] {
        -webkit-box-flex: 1;
        -webkit-flex: 1 0 auto;
        -moz-flex: 1 0 auto;
        -ms-flex: 1 0 auto;
        flex: 1 0 auto;
        display: -webkit-box;
        display: -webkit-flex;
        display: -moz-flex;
        display: -ms-flexbox;
        display: flex;
        -webkit-box-align: center;
        -ms-flex-align: center;
        -webkit-align-items: center;
        -moz-align-items: center;
        align-items: center;
        -webkit-box-pack: center;
        -ms-flex-pack: center;
        -webkit-justify-content: center;
        -moz-justify-content: center;
        justify-content: center;
        -webkit-flex-wrap: nowrap;
        -ms-flex-wrap: none;
        flex-wrap: nowrap;
        -ms-box-shadow: none;
        -o-box-shadow: none;
        box-shadow: none;
        border-radius: 2px;
        line-height: 1;
        min-width: 72px;
        max-width: 125px;
        padding: 6px 18px;
        color: rgba(0, 0, 0, 0.87);
        cursor: pointer;
        font-size: 13px;
        background-color: transparent;
        text-align: center; }
        body header.au-header > nav.au-navbar nav-item[au-tabs] > a[tab-item] > .au-tag {
          font-weight: bold;
          font-size: 10px;
          color: white;
          background-color: #ef67a8;
          border-radius: 2px;
          padding: 1px 7px;
          margin-left: 4px;
          line-height: 1; }
        body header.au-header > nav.au-navbar nav-item[au-tabs] > a[tab-item].au-active {
          -ms-box-shadow: 0px 4px 2px -1px #d9d9d9;
          -o-box-shadow: 0px 4px 2px -1px #d9d9d9;
          box-shadow: 0px 4px 2px -1px #d9d9d9;
          color: white;
          background-color: #70519E; }
          body header.au-header > nav.au-navbar nav-item[au-tabs] > a[tab-item].au-active > .au-tag {
            color: #ef67a8;
            background-color: white; }
    body header.au-header > nav.au-navbar nav-item[right] {
      -webkit-box-align: center;
      -ms-flex-align: center;
      -webkit-align-items: center;
      -moz-align-items: center;
      align-items: center; }
    body header.au-header > nav.au-navbar nav-item[search] {
      padding: 0 16px; }
      body header.au-header > nav.au-navbar nav-item[search] a.au-icon-button {
        color: #70519e;
        font-size: 28px;
        font-weight: 300; }
    body header.au-header > nav.au-navbar nav-item[menu] {
      display: -webkit-box;
      display: -webkit-flex;
      display: -moz-flex;
      display: -ms-flexbox;
      display: flex; }
  body au-aside.au-aside {
    display: -webkit-box;
    display: -webkit-flex;
    display: -moz-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-transform: translate3d(-100vw, 0, 0);
    -ms-transform: translate3d(-100vw, 0, 0);
    transform: translate3d(-100vw, 0, 0);
    position: absolute;
    max-width: 70vw;
    min-width: 70vw;
    top: 0;
    z-index: 1;
    height: inherit; }
    body au-aside.au-aside > nav.au-tabs {
      display: -webkit-box;
      display: -webkit-flex;
      display: -moz-flex;
      display: -ms-flexbox;
      display: flex;
      background-color: white;
      cursor: pointer;
      line-height: 3rem;
      max-height: 3rem;
      min-width: 100%;
      top: 0;
      left: 0;
      z-index: 20;
      position: relative; }
      body au-aside.au-aside > nav.au-tabs a[tab-item] {
        display: -webkit-box;
        display: -webkit-flex;
        display: -moz-flex;
        display: -ms-flexbox;
        display: flex;
        -webkit-box-flex: 0;
        -webkit-flex: 0 0 50%;
        -moz-flex: 0 0 50%;
        -ms-flex: 0 0 50%;
        flex: 0 0 50%;
        -webkit-box-align: center;
        -ms-flex-align: center;
        -webkit-align-items: center;
        -moz-align-items: center;
        align-items: center;
        -webkit-box-pack: center;
        -ms-flex-pack: center;
        -webkit-justify-content: center;
        -moz-justify-content: center;
        justify-content: center;
        position: relative;
        line-height: 3rem;
        color: #70519E; }
        body au-aside.au-aside > nav.au-tabs a[tab-item]:after {
          content: " ";
          display: block;
          width: 100%;
          height: 3px;
          position: absolute;
          bottom: 0;
          left: 0;
          background-color: transparent; }
        body au-aside.au-aside > nav.au-tabs a[tab-item].au-active:after {
          background-color: #70519E; }
    body au-aside.au-aside > section {
      display: -webkit-box;
      display: -webkit-flex;
      display: -moz-flex;
      display: -ms-flexbox;
      display: flex;
      -webkit-box-flex: 1;
      -webkit-flex: 1 0 auto;
      -moz-flex: 1 0 auto;
      -ms-flex: 1 0 auto;
      flex: 1 0 auto;
      -webkit-box-flex: 1;
      -webkit-flex: 1 0 auto;
      -moz-flex: 1 0 auto;
      -ms-flex: 1 0 auto;
      flex: 1 0 auto;
      background-color: #70519E;
      position: relative;
      border-right: 1px solid rgba(0, 0, 0, 0.2); }
      body au-aside.au-aside > section:after {
        content: " ";
        position: relative;
        min-height: 5rem;
        max-height: 5rem; }
    body au-aside.au-aside + * au-aside-placeholder {
      display: none; } }

@media (max-width: 47em) {
  body header.au-header {
    -webkit-box-flex: 0;
    -webkit-flex: 0 0 5rem;
    -moz-flex: 0 0 5rem;
    -ms-flex: 0 0 5rem;
    flex: 0 0 5rem;
    -webkit-flex-wrap: nowrap;
    -ms-flex-wrap: none;
    flex-wrap: nowrap;
    min-width: 100%;
    max-height: 5rem; }
    body header.au-header nav.au-navbar {
      -webkit-box-flex: 0;
      -webkit-flex: 0 0 5rem;
      -moz-flex: 0 0 5rem;
      -ms-flex: 0 0 5rem;
      flex: 0 0 5rem; }
  body au-aside.au-aside nav.au-tabs {
    -webkit-box-flex: 0;
    -webkit-flex: 0 0 3rem;
    -moz-flex: 0 0 3rem;
    -ms-flex: 0 0 3rem;
    flex: 0 0 3rem; }
  body main.main-host {
    height: auto; }
    body main.main-host router-view.main-view-port {
      -webkit-box-flex: 1;
      -webkit-flex: 1 0 auto;
      -moz-flex: 1 0 auto;
      -ms-flex: 1 0 auto;
      flex: 1 0 auto;
      -webkit-transform: translate3d(0, 0, 0);
      -ms-transform: translate3d(0, 0, 0);
      transform: translate3d(0, 0, 0);
      height: 100%;
      max-height: 100%;
      min-width: 100%;
      overflow: hidden;
      position: absolute;
      -webkit-backface-visibility: hidden;
              backface-visibility: hidden;
      will-change: overflow; }
      body main.main-host router-view.main-view-port au-menu {
        display: none; }
      body main.main-host router-view.main-view-port main.page-host {
        -webkit-box-flex: 1;
        -webkit-flex: 1 0 auto;
        -moz-flex: 1 0 auto;
        -ms-flex: 1 0 auto;
        flex: 1 0 auto; }
        body main.main-host router-view.main-view-port main.page-host router-view.page-view-port {
          height: auto; }
          body main.main-host router-view.main-view-port main.page-host router-view.page-view-port au-view.content {
            position: absolute;
            min-width: 100%;
            max-width: 100%;
            height: auto;
            -webkit-transform: translate3d(0, 0, 0);
            -ms-transform: translate3d(0, 0, 0);
            transform: translate3d(0, 0, 0); }
  body header.au-header {
    max-height: 5rem; }
  body header.au-header > nav.au-navbar nav-item[logo] {
    -webkit-box-flex: 1;
    -webkit-flex: 1 0 auto;
    -moz-flex: 1 0 auto;
    -ms-flex: 1 0 auto;
    flex: 1 0 auto;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    -webkit-justify-content: center;
    -moz-justify-content: center;
    justify-content: center; }
    body header.au-header > nav.au-navbar nav-item[logo] a[title] {
      font-size: 20px;
      color: #A1478C;
      line-height: 4.3; }
  body header.au-header > nav.au-navbar nav-item[left],
  body header.au-header > nav.au-navbar nav-item[right],
  body header.au-header > nav.au-navbar nav-item[au-tabs] {
    display: none; }
  body au-aside {
    -webkit-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    -webkit-transition-duration: 200ms;
    transition-duration: 200ms;
    -webkit-transform-origin: center;
    -ms-transform-origin: center;
    transform-origin: center;
    box-shadow: 4px 0px 6px rgba(0, 0, 0, 0.2); }
    body au-aside.is-active {
      -webkit-transform: translate3d(0, 0, 0);
      -ms-transform: translate3d(0, 0, 0);
      transform: translate3d(0, 0, 0);
      z-index: 24; }
  body main router-view.main-view-port {
    -webkit-align-content: flex-end;
    -ms-flex-line-pack: end;
    align-content: flex-end;
    -webkit-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    -webkit-transition-duration: 200ms;
    transition-duration: 200ms;
    -webkit-transform-origin: center;
    -ms-transform-origin: center;
    transform-origin: center;
    overflow: visible; } }

@media (min-width: 48em) {
  body header.au-header {
    -webkit-box-flex: 0;
    -webkit-flex: 0 0 5rem;
    -moz-flex: 0 0 5rem;
    -ms-flex: 0 0 5rem;
    flex: 0 0 5rem;
    -webkit-flex-wrap: nowrap;
    -ms-flex-wrap: none;
    flex-wrap: nowrap;
    min-width: 100%;
    max-height: 5rem; }
    body header.au-header nav.au-navbar {
      -webkit-box-flex: 0;
      -webkit-flex: 0 0 5rem;
      -moz-flex: 0 0 5rem;
      -ms-flex: 0 0 5rem;
      flex: 0 0 5rem; }
  body au-aside.au-aside nav.au-tabs {
    -webkit-box-flex: 0;
    -webkit-flex: 0 0 3rem;
    -moz-flex: 0 0 3rem;
    -ms-flex: 0 0 3rem;
    flex: 0 0 3rem; }
  body main.main-host {
    height: auto; }
    body main.main-host router-view.main-view-port {
      -webkit-box-flex: 1;
      -webkit-flex: 1 0 auto;
      -moz-flex: 1 0 auto;
      -ms-flex: 1 0 auto;
      flex: 1 0 auto;
      -webkit-transform: translate3d(0, 0, 0);
      -ms-transform: translate3d(0, 0, 0);
      transform: translate3d(0, 0, 0);
      height: 100%;
      max-height: 100%;
      min-width: 100%;
      overflow: hidden;
      position: absolute;
      -webkit-backface-visibility: hidden;
              backface-visibility: hidden;
      will-change: overflow; }
      body main.main-host router-view.main-view-port au-menu {
        display: none; }
      body main.main-host router-view.main-view-port main.page-host {
        -webkit-box-flex: 1;
        -webkit-flex: 1 0 auto;
        -moz-flex: 1 0 auto;
        -ms-flex: 1 0 auto;
        flex: 1 0 auto; }
        body main.main-host router-view.main-view-port main.page-host router-view.page-view-port {
          height: auto; }
          body main.main-host router-view.main-view-port main.page-host router-view.page-view-port au-view.content {
            position: absolute;
            min-width: 100%;
            max-width: 100%;
            height: auto;
            -webkit-transform: translate3d(0, 0, 0);
            -ms-transform: translate3d(0, 0, 0);
            transform: translate3d(0, 0, 0); }
  body main.main-host {
    height: auto; }
    body main.main-host router-view.main-view-port {
      -webkit-box-flex: 1;
      -webkit-flex: 1 0 auto;
      -moz-flex: 1 0 auto;
      -ms-flex: 1 0 auto;
      flex: 1 0 auto;
      -webkit-transform: translate3d(0, 0, 0);
      -ms-transform: translate3d(0, 0, 0);
      transform: translate3d(0, 0, 0);
      height: 100%;
      max-height: 100%;
      min-width: 100%;
      overflow: hidden;
      position: absolute;
      -webkit-backface-visibility: hidden;
              backface-visibility: hidden;
      will-change: overflow; }
      body main.main-host router-view.main-view-port main.page-host {
        -webkit-box-flex: 1;
        -webkit-flex: 1 0 auto;
        -moz-flex: 1 0 auto;
        -ms-flex: 1 0 auto;
        flex: 1 0 auto; }
        body main.main-host router-view.main-view-port main.page-host router-view.page-view-port {
          height: auto; }
          body main.main-host router-view.main-view-port main.page-host router-view.page-view-port au-view.content {
            position: absolute;
            min-width: 100%;
            height: auto;
            -webkit-transform: translate3d(0, 0, 0);
            -ms-transform: translate3d(0, 0, 0);
            transform: translate3d(0, 0, 0); }
  body header.au-header > nav.au-navbar {
    z-index: 2; }
    body header.au-header > nav.au-navbar nav-item[left],
    body header.au-header > nav.au-navbar nav-item[right],
    body header.au-header > nav.au-navbar nav-item[au-tabs] {
      display: -webkit-box;
      display: -webkit-flex;
      display: -moz-flex;
      display: -ms-flexbox;
      display: flex; }
    body header.au-header > nav.au-navbar nav-item[search] {
      padding: 0 24px; }
    body header.au-header > nav.au-navbar nav-item[logo] {
      max-width: 220px; }
    body header.au-header > nav.au-navbar nav-item[menu] {
      display: none; }
  body au-aside.au-aside {
    -webkit-transform: translate3d(0, 0, 0);
    -ms-transform: translate3d(0, 0, 0);
    transform: translate3d(0, 0, 0);
    max-width: 18rem;
    min-width: 18rem; }
    body au-aside.au-aside > nav.au-tabs {
      min-height: 5rem;
      max-height: 5rem;
      visibility: collapse; }
    body au-aside.au-aside > section {
      background-color: #ECECED; }
    body au-aside.au-aside + * au-aside-placeholder {
      display: -webkit-box;
      display: -webkit-flex;
      display: -moz-flex;
      display: -ms-flexbox;
      display: flex;
      -webkit-box-flex: 0;
      -webkit-flex: 0 0 18rem;
      -moz-flex: 0 0 18rem;
      -ms-flex: 0 0 18rem;
      flex: 0 0 18rem;
      min-width: 18rem;
      max-width: 18rem;
      height: 100%;
      visibility: collapse; }
  body main.page-host au-view.content {
    padding: 1.5em; }
  body main.page-host {
    scroll-behavior: smooth; } }

/*# sourceMappingURL=data:application/json;base64, */
